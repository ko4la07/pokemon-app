{"version":3,"sources":["webpack://src/scss/app.scss","webpack://src/scss/_mixins.scss","webpack://src/scss/_variables.scss"],"names":[],"mappings":"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","file":"main.13518ffe.chunk.css","sourcesContent":["@import 'variables';\r\n@import 'mixins';\r\n\r\n*{\r\n  margin: 0px;\r\n  padding:0px;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody{\r\n  @include roboto-regular(map-get($color,black),map-get($font-size,m));\r\n  background-image: url('../assets/img/background-stars.jpg');\r\n}\r\n\r\n.backgroundHome__image{\r\n  width: 100%;\r\n}\r\n\r\na {\r\n  color: map-get($color,white);\r\n  text-decoration: none;\r\n  margin: 10px;\r\n  font-size: map-get($font-size,ml);\r\n  @include breakpoint(700px) {\r\n    margin: 10px 30px;\r\n    font-size: map-get($font-size,xxl);\r\n  }\r\n}\r\nul {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin: 35px 40px 35px 0px;\r\n  @include breakpoint(700px) {\r\n    margin: 40px 100px 35px 0px;\r\n  }\r\n}\r\nli {\r\n  list-style: none;\r\n}\r\n.App {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.App-header {\r\n  background-color: map-get($color,darkBlue);\r\n  height: 100px;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  color: white;\r\n  @include breakpoint(700px) {\r\n    height: 120px;\r\n  }\r\n}\r\n.App-header img {\r\n  height: 70px;\r\n  width: 150px;\r\n  margin: 15px 0px 15px 30px;\r\n  @include breakpoint(700px) {\r\n    height: 100px;\r\n    width: 240px;\r\n    margin: 15px 0px 15px 60px;\r\n  }\r\n}\r\n.line-header {\r\n  height: 5px;\r\n  background-color: map-get($color,darkYellow);\r\n}\r\n.background-home {\r\n  background-image: url('../assets/img/backgroundHome.png');\r\n  background-size: cover;\r\n  background-position: center;\r\n  height: 200px;\r\n  display: flex;\r\n  flex: 1;\r\n  @include breakpoint(700px) {\r\n    height: 430px;\r\n    width: 100%;\r\n  }\r\n  @include breakpoint(laptop){\r\n    height: 100vh;\r\n  }\r\n}\r\n\r\n/* FOOTER */\r\nfooter {\r\n  background-color: map-get($color,darkYellow);\r\n  @include roboto-regular(map-get($color,white),map-get($font-size,ml));\r\n  height: 80px;\r\n  padding: 30px;\r\n  text-align: center;\r\n  position: fixed;\r\n  bottom: 0;\r\n  width: 100%;\r\n  z-index: 70;\r\n}\r\n\r\n/* MODAL */\r\n.modal {\r\n  position: fixed;\r\n  z-index: 100;\r\n  top:0;\r\n  left: 0;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  background-color: rgba(229, 229, 229, 0.6);\r\n  color: map-get($color,white);\r\n  display: none;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.modal.is-open {\r\n  display: flex;\r\n}\r\n.modal-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n  padding: 20px 17px 0px;\r\n  background-image: url('../assets/img/background-blue.jpg');\r\n  font-weight: 100;\r\n  font-size: 16px;\r\n  border-radius: 15px;\r\n  flex-wrap: wrap;\r\n  line-height: 37px;\r\n  @include breakpoint(700px) {\r\n    width: 700px;\r\n    height: 820px;\r\n  }\r\n}\r\n.modal-container h2 {\r\n  display: flex;\r\n  justify-content: center;\r\n  color: map-get($color,darkYellow);\r\n  font-weight: 300;\r\n  margin-bottom: 15px;\r\n}\r\n.modal-close {\r\n  position: absolute;\r\n  top: 1rem;\r\n  right: 2rem;\r\n  border: none;\r\n  background-color: transparent;\r\n  color: white;\r\n  height: 20px;\r\n  width: 20px;\r\n}\r\n.modal-close path {\r\n  color: map-get($color,white);\r\n}\r\n.modal-close svg {\r\n  height: 18px;\r\n  width: 18px;\r\n  @include breakpoint(700px) {\r\n    height: 35px;\r\n    width: 35px;\r\n  }\r\n}\r\n.modal-information {\r\n  background-color: map-get($color,white);\r\n  @include roboto-regular(map-get($color,black),map-get($font-size,m));\r\n  border-radius: 15px;\r\n  padding: 45px 30px 20px;\r\n  width: 300px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: center;\r\n  @include breakpoint(700px) {\r\n    width: 645px;\r\n    height: 510px;\r\n  }\r\n}\r\n.modal-img {\r\n  height: 200px;\r\n  width: 200px;\r\n  display: flex;\r\n  align-self: center;\r\n  margin: 30px 0px -35px;\r\n  background-color: map-get($color,white);\r\n  border-radius: 50%;\r\n  @include breakpoint(700px) {\r\n    height: 290px;\r\n    width: 290px;\r\n    margin: 35px 0px -35px;\r\n  }\r\n}\r\n.img-pokemon {\r\n  z-index: 100;\r\n}\r\ntable {\r\n  text-align: start;\r\n  margin: 20px 10px 0px;\r\n  @include breakpoint(700px) {\r\n    padding: 10px 120px;\r\n    @include roboto-regular(rgba(0, 0, 0, 0.7),map-get($font-size,x));\r\n\r\n  }\r\n}\r\n.modal-article {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n.pokemon-info {\r\n  display: grid;\r\n  margin: 10px;\r\n  grid-template-columns: 1.2fr 2.6fr 1.2fr;\r\n  @include breakpoint(700px) {\r\n    padding: 10px 80px;\r\n    @include roboto-regular(rgba(0, 0, 0, 0.6),map-get($font-size,ml));\r\n  }\r\n}\r\n.pokemon-info div {\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n}\r\n.each-type {\r\n  display: flex;\r\n  width: 40px;\r\n  margin: 0px 10px;\r\n}\r\n.each-type img {\r\n  align-self: center;\r\n}\r\n#type-pokemon {\r\n  display: flex;\r\n  padding: 0px 10px;\r\n  @include breakpoint(700px) {\r\n    flex-direction: row;\r\n    font-size: 16px;\r\n  }\r\n}\r\n.line-modal {\r\n  height: 1px;\r\n  margin: 10px 0px 0px;\r\n  background-color: map-get($color,lightBlack);\r\n}\r\n.pokemon-name {\r\n  @include breakpoint(700px) {\r\n    @include roboto-regular(rgba(0, 0, 0, 0.6),map-get($font-size,x));\r\n  }\r\n}\r\n.pokemon-name strong {\r\n  @include roboto-regular(map-get($color,black),map-get($font-size,xxl));\r\n}\r\n.pokemon-name span {\r\n  @include roboto-regular(rgba(0, 0, 0, 0.6),map-get($font-size,ml));\r\n  margin-left: 10px;\r\n}\r\n.pokemon-wh p {\r\n  @include roboto-regular(map-get($color,black),map-get($font-size,m));\r\n  @include breakpoint(700px) {\r\n    @include roboto-regular(map-get($color,black),map-get($font-size,ml));\r\n  }\r\n}\r\n.pokemon-wh span {\r\n  @include roboto-regular(rgba(0, 0, 0, 0.6),map-get($font-size,m));\r\n}\r\n\r\n/*   POKEDEX */\r\n.container-pokedex {\r\n  background-image: url('../assets/img/background-stars.jpg');\r\n  background-position: center;\r\n  background-size: cover;\r\n  padding: 30px 0px 100px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: center;\r\n  height: 100%;\r\n}\r\n.card-pokemon {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 500px;\r\n  width: 320px;\r\n  background-image: url('../assets/img/background-blue.jpg');\r\n  font-size: 16px;\r\n  border-radius: 15px;\r\n  flex-wrap: wrap;\r\n  margin: 20px;\r\n  @include breakpoint(700px) {\r\n    height: 490px;\r\n    width: 387px;\r\n  }\r\n}\r\n.container-allPokemon {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-around;\r\n}\r\n.card-img {\r\n  height: 210px;\r\n  width: 210px;\r\n  display: flex;\r\n  align-self: center;\r\n  margin: 20px 0px -80px;\r\n  background-color: map-get($color,white);\r\n  border-radius: 50%;\r\n}\r\n.card-img img {\r\n  height: 200px;\r\n  width: 200px;\r\n}\r\n.card-img {\r\n  z-index: 50;\r\n}\r\n.card-information {\r\n  background-color: map-get($color,white);\r\n  padding: 90px 20px 0px;\r\n  border-radius: 15px;\r\n  height: 310px;\r\n  @include roboto-regular(map-get($color,black),map-get($font-size,m));\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: center;\r\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.25);\r\n  @include breakpoint(700px) {\r\n    height: 300px;\r\n  }\r\n}\r\n.card-name {\r\n  @include roboto-regular(rgba(0, 0, 0, 0.6),map-get($font-size,x));\r\n  margin-bottom: 10px;\r\n}\r\n.card-name strong {\r\n  @include roboto-regular(map-get($color,black),map-get($font-size,ml));\r\n}\r\n.card-name span {\r\n  @include roboto-regular(rgba(0, 0, 0, 0.6),map-get($font-size,s));\r\n  margin-left: 5px;\r\n}\r\n.card-info {\r\n  display: grid;\r\n  margin: 10px;\r\n  grid-template-columns: 1fr 1fr;\r\n}\r\n.card-info div {\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n}\r\n.btn-card {\r\n  border:  2px solid map-get($color,darkBlue);\r\n  background-color: transparent;\r\n  border-radius: 15px;\r\n  @include roboto-regular(map-get($color,darkBlue),map-get($font-size,ml));\r\n  padding: 3px;\r\n  width: 200px;\r\n  align-self: center;\r\n  // margin: 25px;\r\n  position: relative;\r\n  bottom: -10px\r\n}\r\n.card-number {\r\n  @include roboto-regular(map-get($color,white),map-get($font-size,ml));\r\n  padding: 15px 0px 0px 15px;\r\n}\r\n#input-search {\r\n  border-radius: 15px 0px 0px 15px;\r\n  border:  2px solid map-get($color,darkYellow);\r\n  background-color: transparent;\r\n  padding: 6px 12px;\r\n  height: 40px;\r\n  width: 220px;\r\n  @include roboto-regular(map-get($color,white),map-get($font-size,m));\r\n  outline: none; \r\n  @include breakpoint(700px) {\r\n    padding: 6px 12px;\r\n    height: 50px;\r\n    width: 400px;\r\n    @include roboto-regular(map-get($color,white),map-get($font-size,ml));\r\n  }\r\n}\r\n#input-search::placeholder {\r\n  @include roboto-regular(map-get($color,darkYellow),map-get($font-size,ml));\r\n}\r\n.search-sort {\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  margin-bottom: 20px;\r\n  @include breakpoint(700px) {\r\n    padding-top: 30px;\r\n  }\r\n}\r\n.search-sort div {\r\n  margin-left: 20px;\r\n}\r\n.search-sort button {\r\n  background-color: map-get($color,darkYellow);\r\n  border:  none;\r\n  padding: 6px 12px;\r\n  height: 41px;\r\n  @include roboto-regular(map-get($color,white),map-get($font-size,ml));\r\n  cursor: pointer;\r\n  @include breakpoint(700px) {\r\n    padding: 6px 20px;\r\n    height: 50px;\r\n  }\r\n}\r\n.search-sort button:hover {\r\n  background-color: rgba(185, 130, 26, 1);\r\n}\r\n#sort-pokemon {\r\n  border-radius: 0px 15px 15px 0px;\r\n  background-color: map-get($color,darkYellow);\r\n  padding: 6px 12px;\r\n  height: 40px;\r\n  width: 300px;\r\n  @include roboto-regular(map-get($color,white),map-get($font-size,ml));\r\n  margin-top: 15px;\r\n  border: none;\r\n  @include breakpoint(700px) {\r\n    margin-top: 15px;\r\n    height: 50px;\r\n    width: 500px;\r\n  }\r\n  @include breakpoint(1000px) {\r\n    padding: 6px 20px;\r\n    height: 50px;\r\n    width: 430px;\r\n    margin-top: 0px;\r\n    text-align: center;\r\n  }\r\n}\r\n#sort-pokemon:focus{ \r\n  outline: none;\r\n}\r\n.pagination {\r\n  display: flex;\r\n  text-align: center;\r\n  margin-left: 40px;\r\n}\r\n.pagination button {\r\n  padding: 10px;\r\n  width: 130px;\r\n  @include roboto-regular(map-get($color,white),map-get($font-size,ml));\r\n  background-color: map-get($color,darkYellow);\r\n  border: none;\r\n  margin: 5px;\r\n}\r\n","@mixin breakpoint($point) {\r\n  @if $point == desktop {\r\n      @media (min-width: 82.5em) { @content ; }\r\n  }\r\n  @else if $point == laptop {\r\n      @media (min-width: 64em) { @content ; }\r\n  }\r\n  @else if $point == tablet {\r\n      @media (min-width: 50em) { @content ; }\r\n  }\r\n  @else if $point == phablet {\r\n      @media (min-width: 37.5em)  { @content ; }\r\n  }\r\n  @else if $point == mobileonly {\r\n      @media (max-width: 37.5em)  { @content ; }\r\n  }\r\n  @else {\r\n    @media (min-width: $point)  { @content ; }\r\n  } \r\n}\r\n\r\n\r\n@mixin fonts-style($color, $font-family, $font-size, $font-weight, $line-height, $letter-spacing){\r\n  color: $color;\r\n  font-family: $font-family;\r\n  font-size: $font-size;\r\n  font-weight: $font-weight;\r\n  line-height: $line-height;\r\n  letter-spacing: $letter-spacing;\r\n}\r\n\r\n@mixin roboto-regular($color, $size){\r\n  @include fonts-style($color, 'Roboto', $size, 400, normal, normal);\r\n}\r\n@mixin roboto-medium($color, $size){\r\n  @include fonts-style($color, 'Roboto', $size, 500, normal, normal);\r\n}\r\n@mixin roboto-bold($color, $size){\r\n  @include fonts-style($color, 'Roboto', $size, 700, normal, normal);\r\n}","$font-size:(\r\n    s: 0.875em,\r\n    m: 1em,\r\n    ml: 1.250em,\r\n    x: 1.50em,\r\n    xl: 1.750em,\r\n    xxl: 2em\r\n);\r\n\r\n$color:(\r\n    black: #000000,\r\n    lightBlack: rgba(0, 0, 0, 0.2),\r\n    blue: #004C97,\r\n    red: #D52B1E,\r\n    lightBlue: #3DB7E4,\r\n    darkBlue: rgba(24, 60, 120, 1),\r\n    white: #ffffff,\r\n    grey100: #675C53,\r\n    grey80: #988F86,\r\n    grey50: #B7B1A9,\r\n    grey30: #D5D2CA,\r\n    grey:#F2F2F2,\r\n    darkYellow: rgba(255, 166, 0, 1)\r\n);"]}